name: Deploy ExpenseLens to development environment
on: [push]

permissions:
  id-token: write
  contents: write

jobs:
  prepare-variables:
    runs-on: ubuntu-latest
    name: Prepare required variables
    outputs:
      deployment_environment: 'development'
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      new_version: ${{ steps.tag_version.outputs.new_version }}
      backend_image_tag: ${{ secrets.ECR_LOGIN_SERVER }}/expense-lens-service:${{ steps.tag_version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ github.token }}
          release_branches: feature/EK-4-initialize-deploy-project
          tag_prefix: v

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1.14.0
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  build-backend:
    needs: [prepare-variables]
    runs-on: ubuntu-latest
    environment: ${{ needs.prepare-variables.outputs.deployment_environment }}
    defaults:
      run:
        shell: bash
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: OIDC Login to Azure Public Cloud with AzPowershell (enableAzPSSession true)
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Docker login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ECR_LOGIN_SERVER }}
          username: ${{ secrets.ECR_USERNAME }}
          password: ${{ secrets.ECR_PASSWORD }}

      - name: Build & push Docker image
        id: backend_image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ needs.prepare-variables.outputs.backend_image_tag }}
          push: true
          context: .
          file: ./Dockerfile_Backend

  build-function:
    needs: [prepare-variables]
    runs-on: ubuntu-latest
    environment: ${{ needs.prepare-variables.outputs.deployment_environment }}
    defaults:
      run:
        shell: bash
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: OIDC Login to Azure Public Cloud with AzPowershell (enableAzPSSession true)
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Build Azure Function and Zip
        run: |
          dotnet build src/Functions/Functions.csproj -c Release -o Publish -p:DeployOnBuild=true -p:'DeployTarget=Package;CreatePackageOnPublish=true'
          cd Publish
          zip -r ../ExpenseLensFunctions-${{ needs.prepare-variables.outputs.new_version }}.zip .
          cd ..

      - name: Upload to storage using CLI
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            az storage blob upload-batch --account-name ${{ secrets.FUNCTION_STORAGE_ACCOUNT_NAME }} -d 'function' -s . --pattern "*.zip"

  deploy:
    runs-on: ubuntu-latest
    environment: ${{ needs.prepare-variables.outputs.deployment_environment }}
    name: Deploy ExpenseLens to development
    needs: [ build-backend, build-function ]
    defaults:
      run:
        shell: bash
    env:
      BACKEND_IMAGE_TAG: ${{ needs.prepare-variables.outputs.backend_image_tag }}
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4

      - name: OIDC Login to Azure Public Cloud with AzPowershell (enableAzPSSession true)
        uses: azure/login@v2.1.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - uses: pulumi/actions@v5.2.3
        name: Deploy infrastructure to development
        env:
          BACKEND_SERVICE_IMAGE_TAG: ${{ secrets.ECR_LOGIN_SERVER }}/expense-lens-service:${{ github.sha }}
          AZURE_STORAGE_ACCOUNT: ${{ secrets.PULUMI_AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_KEY: ${{ secrets.PULUMI_AZURE_STORAGE_KEY }}
        with:
          command: up
          stack-name: development
          work-dir: deploy
          cloud-url: azblob://development
          suppress-outputs: true
          suppress-progress: true
